# cmake/toolchain-imx.cmake
set(CMAKE_SYSTEM_NAME Linux)
set(CMAKE_SYSTEM_PROCESSOR arm)

# Yocto SDK sysroot
set(SDK_SYSROOT "/opt/eng-imx-fb/5.4-zeus/sysroots/cortexa7t2hf-neon-poky-linux-gnueabi")
set(CMAKE_SYSROOT "${SDK_SYSROOT}")
set(CMAKE_FIND_ROOT_PATH "${SDK_SYSROOT}")

# FULL PATHS to the toolchain binaries:
set(_SDK_BIN "/opt/eng-imx-fb/5.4-zeus/sysroots/x86_64-pokysdk-linux/usr/bin/arm-poky-linux-gnueabi")
set(CMAKE_C_COMPILER   "${_SDK_BIN}/arm-poky-linux-gnueabi-gcc")
set(CMAKE_CXX_COMPILER "${_SDK_BIN}/arm-poky-linux-gnueabi-g++")
# (Optional, but helps) 
set(CMAKE_ASM_COMPILER "${_SDK_BIN}/arm-poky-linux-gnueabi-gcc")
set(CMAKE_AR           "${_SDK_BIN}/arm-poky-linux-gnueabi-ar")
set(CMAKE_NM           "${_SDK_BIN}/arm-poky-linux-gnueabi-nm")
set(CMAKE_RANLIB       "${_SDK_BIN}/arm-poky-linux-gnueabi-ranlib")
set(CMAKE_STRIP        "${_SDK_BIN}/arm-poky-linux-gnueabi-strip")

# Flags (mirrored from your env-setup)
set(MARCH_FLAGS "-mthumb -mfpu=neon -mfloat-abi=hard -mcpu=cortex-a7")
# -D_FORTIFY_SOURCE=2
# set(HARDEN_FLAGS "-fstack-protector-strong -Wformat -Wformat-security -Werror=format-security")
set(HARDEN_FLAGS "-fstack-protector-strong -Wformat -Wformat-security")

# Suppress noisy autogenerated warnings (open62541)
# set(QUIET_FLAGS "-Wno-missing-field-initializers -Wno-nonnull -Wno-aggregate-return")
set(QUIET_FLAGS "")

# add -O2 (and optional Yocto extras)
set(OPT_FLAGS "-O2 -pipe -g -feliminate-unused-debug-types")

set(CMAKE_C_FLAGS_INIT   "${MARCH_FLAGS} ${HARDEN_FLAGS} ${OPT_FLAGS} ${QUIET_FLAGS} --sysroot=${SDK_SYSROOT}")
set(CMAKE_CXX_FLAGS_INIT "${MARCH_FLAGS} ${HARDEN_FLAGS} ${OPT_FLAGS} ${QUIET_FLAGS} --sysroot=${SDK_SYSROOT}")

set(CMAKE_EXE_LINKER_FLAGS_INIT "-Wl,-O1 -Wl,--hash-style=gnu -Wl,--as-needed -Wl,-z,relro,-z,now")

# Make CMake search in the sysroot
set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)

# Avoid try-compile doing a link test before we've found libs
set(CMAKE_TRY_COMPILE_TARGET_TYPE STATIC_LIBRARY)

# --- Manually provide threading configuration for cross builds ---
set(THREADS_PREFER_PTHREAD_FLAG ON)
set(CMAKE_HAVE_THREADS_LIBRARY 1)
set(CMAKE_USE_PTHREADS_INIT 1)
set(CMAKE_THREAD_LIBS_INIT "-lpthread")
set(Threads_FOUND TRUE)
